//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MChavezSistemaDeBecasEntities : DbContext
    {
        public MChavezSistemaDeBecasEntities()
            : base("name=MChavezSistemaDeBecasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alumno> Alumnoes { get; set; }
        public virtual DbSet<Beca> Becas { get; set; }
        public virtual DbSet<AlumnoBeca> AlumnoBecas { get; set; }
    
        public virtual int AlumnoAdd(string nombreAlumno, string apellidoPaterno, string apellidoMaterno, Nullable<bool> genero, Nullable<int> edad)
        {
            var nombreAlumnoParameter = nombreAlumno != null ?
                new ObjectParameter("NombreAlumno", nombreAlumno) :
                new ObjectParameter("NombreAlumno", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var generoParameter = genero.HasValue ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(bool));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlumnoAdd", nombreAlumnoParameter, apellidoPaternoParameter, apellidoMaternoParameter, generoParameter, edadParameter);
        }
    
        public virtual int AlumnoDelete(Nullable<int> idAlumno)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("IdAlumno", idAlumno) :
                new ObjectParameter("IdAlumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlumnoDelete", idAlumnoParameter);
        }
    
        public virtual ObjectResult<AlumnoGetAll_Result> AlumnoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlumnoGetAll_Result>("AlumnoGetAll");
        }
    
        public virtual ObjectResult<AlumnoGetById_Result> AlumnoGetById(Nullable<int> idAlumno)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("IdAlumno", idAlumno) :
                new ObjectParameter("IdAlumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlumnoGetById_Result>("AlumnoGetById", idAlumnoParameter);
        }
    
        public virtual int AlumnoUpdate(string nombreAlumno, string apellidoPaterno, string apellidoMaterno, Nullable<bool> genero, Nullable<int> edad, Nullable<int> idAlumno)
        {
            var nombreAlumnoParameter = nombreAlumno != null ?
                new ObjectParameter("NombreAlumno", nombreAlumno) :
                new ObjectParameter("NombreAlumno", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var generoParameter = genero.HasValue ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(bool));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("IdAlumno", idAlumno) :
                new ObjectParameter("IdAlumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlumnoUpdate", nombreAlumnoParameter, apellidoPaternoParameter, apellidoMaternoParameter, generoParameter, edadParameter, idAlumnoParameter);
        }
    
        public virtual ObjectResult<AlumnoBecaGetAll_Result> AlumnoBecaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlumnoBecaGetAll_Result>("AlumnoBecaGetAll");
        }
    
        public virtual int BecaAdd(Nullable<int> idAlumno, Nullable<int> idBeca)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("IdAlumno", idAlumno) :
                new ObjectParameter("IdAlumno", typeof(int));
    
            var idBecaParameter = idBeca.HasValue ?
                new ObjectParameter("IdBeca", idBeca) :
                new ObjectParameter("IdBeca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BecaAdd", idAlumnoParameter, idBecaParameter);
        }
    
        public virtual ObjectResult<BecaGetAll_Result> BecaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BecaGetAll_Result>("BecaGetAll");
        }
    }
}
